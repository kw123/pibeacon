
======= HELP for DF2301Q / SEN0539 speech recognition sensor
----- Intro
    This sensor can recognize specific voice phrases, it convrts them into command codes (1...255)
    It can learn new phrases by speaking into it.
    The plugin supports the sensor connected to an rpi. It shows the received command codes in sensorValues as command# and in sensorValue_ui as #:text

----- Install sensor: 
    for i2c:    connect the 4 cables to +3V, gnd, C to SLC, D to SDA, i2c number is fixed: 0x64 = 100; 
       on RPi: sudo raspi-config: Interface Options/I2C enabled
    for serial: connect the 4 cables to +5V, gnd, T to RXD, R to TCD
       on RPi: sudo raspi-config: Interface Options/Serial Port: disable login, enable serial hardware port 
    pi 3 and faster can do i2c, but is sometimes unstable. Pi 2 and pi0 are not stable with i2c with THIS sensor, use uart/serial with them
    uart/serial does not support initial set wake up ON. After sensor power on you need to speak the wakeup word once, then it is active until power cycle / restart of program
  In device edit 
     select the rpi the sensor is connected to.
     set keep awake = no controll word needed, it will continuously listen to commands
     set wake up time (how long is sensor listening after key word 0-255secs)
     set mute on/off this is for the speaker, not the mic. With mute ON the device can react faster to the next command
     set volume 0-20 = volume of speaker
     enter custom commands = strings to be used in status display for user defined commands 5 - 21
     you can select to add a local (on rpi) action to turn gpios on/off when any or a specific voice command is received
     enable a GPIO command received inditicator: gpio turns off/on (can be reversed) if cmd# > 0 received. It can be used to drive an LED, conencted w 100Ohm resistor to V+3.3
     In the expert section you can tune specific timing parameters and can add a power cycle of the sensor with a gpio -> relay option - connect the power to the sensor through a relay
        that relay will then power cycle the sensor when the sensor has a hard ware connect error ie for i2c connection.
   save
 Use this sensor to trigger on dev state "counter"  "has any change" ( counter gets increased with every message. Do not trigger on sensorValue, that can be the same as the last value)
     use "condition" dev state "sensorValue" is eq 103 (phrase: turn on the light)  ==> then trigger your action "turn on light" in indigo
     use "condition" dev state "sensorValue" is eq 104 (phrase: turn off the light) ==> then trigger your action "turn off light" in indigo
----- How does it work:
  the sensor py program on the rpi can set mute, volume, wake up,.. through i2c/uart/serial. It can not set any custom commands, that must be done through voice commands speaking into the sensor.
  the rpi reads the codes coming from the sensor as the sensor detetcs them. It is done through i2c interface or uart/serial. It sends just the code number to the plugin
  the plugin takes the code number and shows it with the pre-defined text in the states (or from the custom commands defined text from device edit)
 
======= Configuring the sensor commands -- from the sensor web pages:
----- Learning wake-up word:
· Initiate the voice assistant by speaking the default wake-up word, then say "Learning wake word"
  Follow the prompts to learn the new wake-up word 
    (prior to each learning command, it is necessary to remove the previously learned wake-up word; refer to the instructions for wake-up word and command phrase deletion)
· Indication: Learning now, be quiet, please say the wake word to be learned!
· The designated wake-up word to be acquired (taking "hey indigo" as an example): “hey indigo”
· Indication: Learning successful, please say it again!
· The designated wake-up word to be acquired : “hey indigo”
· Prompt: Learning successful, please say it again!
· The designated wake-up word to be acquired : “hey indigo”
· Prompt: Ok, learning completed!
. say "Exit learning" to end learning
· Once the learning process is accomplished, you will be able to utilize the phrase "hey indigo" to awaken the voice assistant!
 
-----Learning command words:
Say a wake-up word (default or learned) to wake up the voice assistant, and then say "Learning command word" to initiate the process of learning command phrase, following the provided prompts.
     Before each session of learning command phrases, it is necessary to delete the previously learned command phrases.
· Indication: Learning now, be quiet, please learn the command word according to the prompt! Please say the first command to be learned!
· Command phrase to be learned (using "Turn on Greenlight" as an example): "Turn on Green light"
· Indication: Learning successful, please say it again!
· Command phrase to be learned : “Turn on Green light”
· Indication: Learning successful, please say it again!
· Command phrase to be learned : “Turn on Green light”
· Indication: OK, learned the first command successfully! Please say the second command to be learned!
... (Continue learning)
. say "Exit learning" to end learning
After the completion of the learning process, an ID will be automatically generated. You can see that command id by saying it and then checking the indigo device status
 
 
----- Delete Wake Words and Command Words:
Use a wake-up word (default or learned) to wake up the voice assistant, and speak the phrase "I want to delete"
      Follow the prompts to eliminate the specified command phrase as instructed.
· Indication: Do you want to delete the learned wake word or command word?
· "Delete command word " : will Remove the previously acquired command phrases.
· "Delete wake word" : will Erase the learned awakening words from the system.
· "Delete all" : Eliminate the assimilated awakening phrases and command phrases from memory.
. say "Exit deleting" to end deleting
 
======= internet references:
https://www.tme.eu/Document/064226f2d0b3baf20e9949b0a9b6a625/DF-SEN0539-EN-TME.pdf for tech doc
https://github.com/DFRobot/DFRobot_DF2301Q for program example. It was adapted to be used by this plugin 

