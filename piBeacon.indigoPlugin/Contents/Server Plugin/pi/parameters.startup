{
  "BLEconnectUseHCINo": "-1", 
  "BLEserial": "sequential", 
  "BeaconUseHCINo": "-1", 
  "GPIONumberAfterBoot1": "-1", 
  "GPIONumberAfterBoot2": "-1", 
  "GPIOTypeAfterBoot1": "off", 
  "GPIOTypeAfterBoot2": "off", 
  "GPIOpwm": "1", 
  "IPnumberOfRPI": "192.168.1.20", 
  "IndigoOrSocket": "socket", 
  "acceptJunkBeacons": "0", 
  "acceptNewiBeacons": 999, 
  "authentication": "digest", 
  "batteryUPSshutdownEnable": 0, 
  "configured": "", 
  "debugRPI": 0, 
  "deleteHistoryAfterSeconds": 86400, 
  "deltaChangedSensor": "5", 
  "distanceUnits": "1.0", 
  "enableMuxI2C": "0", 
  "enableRebootCheck": "restartLoop", 
  "enableiBeacons": "1", 
  "fanEnable": "-", 
  "fanGPIOPin": "-1", 
  "fanTempDevId": "0", 
  "fanTempOffAtTempValue": "4", 
  "fanTempOnAtTempValue": "40", 
  "ifNetworkChanges": "restartMaster", 
  "indigoInputPORT": 12087, 
  "ipOfServer": "192.168.1.254", 
  "maxSizeOfLogfileOnRPI": 10000000, 
  "myPiNumber": "0", 
  "networkType": "fullIndigo", 
  "output": {
  }, 
  "passwordOfServer": "xxxstartxxx", 
  "pin_webAdhoc": "-1", 
  "portOfServer": "8176", 
  "pressureUnits": "mBar", 
  "rPiCommandPORT": "9999", 
  "rPiRestartCommand": "", 
  "rebootCommand": "sudo killall -9 python; sudo sync;sleep 4; sudo reboot -f", 
  "rebootHour": 2, 
  "rebootIfNoMessagesSeconds": "99999999999999", 
  "rebootWatchDogTime": "-1", 
  "restartBLEifNoConnect": false, 
  "sendAfterSeconds": "60", 
  "sendFullUUID": "1", 
  "sendToIndigoSecs": "80", 
  "sensorList": "",
  "sensorRefreshSecs": 20.0, 
  "sensors": {
  }, 
  "shutDownPinEnable": 0, 
  "simpleBatteryBackupEnable": 0, 
  "sleepAfterBoot": "0", 
  "startWebServerINPUT": 0, 
  "startWebServerSTATUS": 0, 
  "startXonPi": "", 
  "tempUnits": "Celsius", 
  "timeStamp": "2019-11-12-10:01:39", 
  "timeZone": "-6 /US/Central", 
  "typeForPWM": "", 
  "useRTC": "0", 
  "useRamDiskForLogfiles": "0", 
  "userIdOfServer": "xxstartxx", 
  "wifiEth": {
    "eth0": {
      "on": "on", 
      "useIP": "use"
    }, 
    "wlan0": {
      "on": "onIf", 
      "useIP": "useIf"
    }
  }
}